name: 1. PULL REQUEST - Preview Deployment

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull request number to deploy'
        required: true
        type: number
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  build:
    runs-on: blacksmith-8vcpu-ubuntu-2404
    environment: Staging
    outputs:
      pr_number: ${{ github.event.pull_request.number || github.event.inputs.pr_number }}
      comment_id: ${{ steps.initial_comment.outputs.comment-id }}
    steps:
      - name: Find Existing Deployment Comment
        id: find_comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          comment-author: "github-actions[bot]"
          body-includes: "Deployment"
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Initial Deployment Notification
        id: initial_comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          body: |
            # üîÑ Preview Deployment in Progress

            <div style="background-color: #e8f5fd; padding: 15px; border-radius: 8px; border-left: 5px solid #2196F3; margin-bottom: 20px;">
              <h2 style="color: #0d47a1; margin-top: 0;">Building Your Preview Environment</h2>
              <p style="font-size: 16px; margin-bottom: 0;">
                The preview deployment for PR #${{ github.event.pull_request.number || github.event.inputs.pr_number }} is now being prepared.
              </p>
            </div>

            <table style="width: 100%; border-collapse: separate; border-spacing: 0; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
              <tr style="background-color: #f5f5f5;">
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0; width: 200px;">üîÑ <b>Status:</b></td>
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;"><b style="color: #2196F3;">Building & Deploying</b></td>
              </tr>
              <tr style="background-color: #ffffff;">
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;">‚è±Ô∏è <b>Started at:</b></td>
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;"><code>${{ format('%.19s', github.event.pull_request.updated_at) }} UTC</code></td>
              </tr>
              <tr style="background-color: #f5f5f5;">
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;">üìù <b>Commit:</b></td>
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;"><code>${{ github.event.pull_request.head.sha }}</code></td>
              </tr>
            </table>

            <div style="margin-top: 16px; padding: 12px; background-color: #fffde7; border-left: 4px solid #ffc107; border-radius: 4px;">
              <p style="margin: 0; font-size: 14px;">
                <b>Please wait</b> while we build and deploy your preview environment. This process typically takes 3-5 minutes to complete.
              </p>
            </div>
          edit-mode: ${{ steps.find_comment.outputs.comment-id != '' && 'replace' || 'append' }}

      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Setup Doppler Configuration
        run: |
          doppler setup --no-prompt --token ${{ secrets.DOPPLER_CI_TOKEN }} --project ${{ secrets.DOPPLER_TARGET_PROJECT }} --config stg_ci
          echo "Doppler configuration complete for project ${{ secrets.DOPPLER_TARGET_PROJECT }} with config ${{ secrets.DOPPLER_TARGET_CONFIG }}"
          doppler secrets download --no-file --format env > .env
          echo "Secrets downloaded to .env file."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build client image and push to Docker Hub
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
        with:
          context: .
          file: ./Dockerfile
          tags: |
            gabcat/merchtrack:preview-${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          cache-from: type=registry,ref=gabcat/merchtrack:staging
          cache-to: type=inline,mode=min
          push: true

      - name: Remove env file
        if: always()
        run: |
          if [ -f .env ]; then
            rm .env || echo "Warning: Failed to remove .env file"
          fi

  deploy:
    permissions:
      contents: read
      id-token: write
      pull-requests: write
      deployments: write
    runs-on: self-hosted
    needs: build
    environment: Staging
    steps:
      - name: Navigate to preview directory
        run: |
          cd ~
          mkdir -p preview
          cd preview
          mkdir -p ${{ needs.build.outputs.pr_number }}
          cd ${{ needs.build.outputs.pr_number }}

      - name: Check for existing compose file
        id: check_compose
        run: |
          cd ~/preview/${{ needs.build.outputs.pr_number }}
          if [ -f "compose.yml" ]; then
            echo "compose_exists=true" >> $GITHUB_OUTPUT
          else
            echo "compose_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create compose file if it doesn't exist
        if: steps.check_compose.outputs.compose_exists == 'false'
        run: |
          cd ~/preview/${{ needs.build.outputs.pr_number }}
          cat > compose.yml << 'EOF'
          services:
            preview-${{ needs.build.outputs.pr_number }}:
              image: gabcat/merchtrack:preview-${{ needs.build.outputs.pr_number }}
              container_name: merchtrack-preview-${{ needs.build.outputs.pr_number }}
              restart: "unless-stopped"
              env_file: .env
              environment:
                NODE_ENV: production
                APP_ENV: production
                NEXT_PUBLIC_NODE_ENV: production
                NEXT_RUNTIME: nodejs
                NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL: /dashboard
                NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL: /dashboard
                NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL: /onboarding
              volumes:
                - "/etc/timezone:/etc/timezone:ro"
                - "/etc/localtime:/etc/localtime:ro"

          networks:
            default:
              name: staging
              external: true
          EOF

      - name: Setup Doppler Configuration
        run: |
          cd ~/preview/${{ needs.build.outputs.pr_number }}
          doppler setup --no-prompt --token ${{ secrets.DOPPLER_CI_TOKEN }} --project ${{ secrets.DOPPLER_TARGET_PROJECT }} --config stg_ci
          echo "Doppler configuration complete for project ${{ secrets.DOPPLER_TARGET_PROJECT }} with config ${{ secrets.DOPPLER_TARGET_CONFIG }}"
          doppler secrets download --no-file --format env > .env
          echo "Secrets downloaded to .env file."

      - name: Stop existing container if it exists
        if: steps.check_compose.outputs.compose_exists == 'true'
        run: |
          cd ~/preview/${{ needs.build.outputs.pr_number }}
          sudo docker compose down || true

      - name: Delete old image if exists
        run: |
          cd ~/preview/${{ needs.build.outputs.pr_number }}
          # Get the image ID of the old image if it exists
          set +e
          OLD_IMAGE_ID=$(docker images -q gabcat/merchtrack:preview-${{ needs.build.outputs.pr_number }} 2>/dev/null)
          set -e 
          if [ ! -z "$OLD_IMAGE_ID" ]; then
            echo "Old image found with ID: $OLD_IMAGE_ID"
            # Remove any containers using the image
            CONTAINERS=$(docker ps -a --filter ancestor=gabcat/merchtrack:preview-${{ needs.build.outputs.pr_number }} -q)
            if [ ! -z "$CONTAINERS" ]; then
              echo "Removing containers using the old image"
              sudo docker rm -f $CONTAINERS
            fi
            # Remove the old image
            echo "Removing old image"
            sudo docker rmi -f $OLD_IMAGE_ID
          else
            echo "No old image found to remove"
          fi

      - name: Pull new image and start container
        run: |
          cd ~/preview/${{ needs.build.outputs.pr_number }}
          sudo docker pull gabcat/merchtrack:preview-${{ needs.build.outputs.pr_number }}
          sudo docker compose up -d

      - name: Create Nginx Proxy Manager host
        run: |
          cd ~/npm-api
          set +e
          # Check if proxy host already exists
          DOMAIN="preview-${{ needs.build.outputs.pr_number }}.merchtrack.tech"
          echo "Looking for domain: $DOMAIN in configuration files..."

          # Search for the domain in the Nginx Proxy Manager configuration files
          CONF_DIR="/home/admin/nginxpm/data/nginx/proxy_host"
          echo "Searching for domain in $CONF_DIR"

          # Find the configuration file that contains the exact domain name
          EXISTING_HOST=""
          for CONF_FILE in $CONF_DIR/*.conf; do
            if grep -q "server_name $DOMAIN;" "$CONF_FILE"; then
              # Extract just the number from the filename (remove path and .conf extension)
              EXISTING_HOST=$(basename "$CONF_FILE" .conf)
              echo "Found matching configuration file: $CONF_FILE"
              break
            fi
          done

          echo "Host ID found: $EXISTING_HOST"
          set -e

          if [ -n "$EXISTING_HOST" ]; then
            # Skip creating new host when one already exists
            echo "Host for domain $DOMAIN already exists (ID: $EXISTING_HOST). Skipping creation."
            
            # Optionally update the existing host configuration if needed
            # ./npm-api.sh --host-details "$EXISTING_HOST"
          else
            # Create a new host with the new syntax
            echo "Creating new host for domain $DOMAIN"
            ./npm-api.sh --host-create "$DOMAIN" \
              --cert-generate "$DOMAIN" \
              --cert-email "admin@merchtrack.tech" \
              --dns-provider cloudflare \
              --dns-credentials '{"dns_cloudflare_email":"${{ secrets.CLOUDFLARE_EMAIL }}","dns_cloudflare_api_key":"${{ secrets.CLOUDFLARE_API_KEY }}"}' \
              -i "merchtrack-preview-${{ needs.build.outputs.pr_number }}" \
              -p 3000 \
              -f "http" \
              -b "true" \
              -w "true" \
              --host-ssl-enable \
              -y
            
            echo "New host created for domain $DOMAIN"
          fi
  failure-notification:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: failure()
    steps:
      - name: Update Deployment Comment with Failure
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ needs.build.outputs.comment_id }}
          token: ${{ secrets.GITHUB_TOKEN }}
          edit-mode: replace
          body: |
            # ‚ùå Deployment Failed

            <div style="background-color: #fbe9e7; padding: 15px; border-radius: 8px; border-left: 5px solid #ff5722; margin-bottom: 20px;">
              <h2 style="color: #d84315; margin-top: 0;">Preview Deployment Issues</h2>
              <p style="font-size: 16px; margin-bottom: 0;">
                The preview deployment for PR #${{ needs.build.outputs.pr_number }} has encountered errors and could not be completed.
              </p>
            </div>

            <table style="width: 100%; border-collapse: separate; border-spacing: 0; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
              <tr style="background-color: #f5f5f5;">
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0; width: 200px;">üîÑ <b>Status:</b></td>
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;"><b style="color: #f44336;">‚ùå Failed</b></td>
              </tr>
              <tr style="background-color: #ffffff;">
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;">‚è±Ô∏è <b>Failed at:</b></td>
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;"><code>${{ github.event.pull_request.updated_at }} UTC</code></td>
              </tr>
              <tr style="background-color: #f5f5f5;">
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;">üìù <b>Commit:</b></td>
                <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;"><code>${{ github.event.pull_request.head.sha }}</code></td>
              </tr>
            </table>

            <div style="margin-top: 16px; padding: 12px; background-color: #fff8e1; border-radius: 4px; border-left: 4px solid #ffc107;">
              <p style="margin: 0; font-size: 16px;">
                üì¢ <b>Next Steps:</b> Please check the <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" style="color: #1976d2; text-decoration: none; font-weight: bold;">workflow run</a> for detailed error logs and diagnostic information. Most deployment issues can be fixed by addressing code errors or configuration problems in your PR.
              </p>
            </div>

            <div style="margin-top: 16px; padding: 12px; background-color: #f5f5f5; border-radius: 4px;">
              <p style="margin: 0; font-size: 14px;">
                <i>If you need assistance troubleshooting this issue, please reach out to the DevOps team or leave a comment in this PR.</i>
              </p>
            </div>
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: success()
    steps:
      - name: Update Comment with Success
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ needs.build.outputs.comment_id }}
          token: ${{ secrets.GITHUB_TOKEN }}
          edit-mode: replace
          body: |
            # üöÄ Preview Deployment Successful! 

            <div align="center">
              <h2 style="color: #4CAF50; background-color: #e8f5e9; padding: 10px; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                PR #${{ needs.build.outputs.pr_number }} has been successfully deployed for preview testing
              </h2>
            </div>

            <table style="width: 100%; border-collapse: separate; border-spacing: 0; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
            <tr style="background-color: #f0f4f8;">
              <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;">üìå <b>Preview URL:</b></td>
              <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;"><a href="https://preview-${{ needs.build.outputs.pr_number }}.merchtrack.tech" style="color: #2196F3; text-decoration: none; font-weight: bold;">https://preview-${{ needs.build.outputs.pr_number }}.merchtrack.tech</a></td>
            </tr>
            <tr style="background-color: #ffffff;">
              <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;">‚è∞ <b>Deployed at:</b></td>
              <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;"><code>${{ github.event.pull_request.updated_at }} UTC</code></td>
            </tr>
            <tr style="background-color: #f0f4f8;">
              <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;">üìù <b>Commit:</b></td>
              <td style="padding: 12px; border-bottom: 1px solid #e0e0e0;"><code>${{ github.event.pull_request.head.sha }}</code></td>
            </tr>
            </table>

            <div style="margin-top: 16px; padding: 12px; background-color: #e3f2fd; border-left: 4px solid #2196F3; border-radius: 4px;">
              <p style="margin: 0; font-size: 16px;">
                üì£ <b>The preview environment is now ready for testing!</b> Please verify your changes thoroughly and report any issues in the PR discussion. This environment is an exact replica of production, allowing you to test your changes in isolation before merging.
              </p>
            </div>

      - name: Purge Cloudflare cache
        run: |
          curl https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache \
            -H 'Content-Type: application/json' \
            -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
            -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
            -d '{
              "hosts": ["preview-${{ needs.build.outputs.pr_number }}.merchtrack.tech"]
            }'
